version: 2
jobs:
  ##########################################################################
  #  SHARED STEPS
  ##########################################################################
  build:
    docker:
      - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - $CACHE_VERSION-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - $CACHE_VERSION-dependencies-
      - run: yarn global add node-gyp && yarn install
      - save_cache:
          paths:
            - node_modules
          key: $CACHE_VERSION-dependencies-{{ checksum "package.json" }}
  lint:
    docker:
      - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: $CACHE_VERSION-dependencies-{{ checksum "package.json" }}
      - run: yarn lint
      - run: yarn format:check

  ##########################################################################
  #  BACK SPECIFIC
  ##########################################################################
  back-test-unit:
    docker:
      - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: $CACHE_VERSION-dependencies-{{ checksum "package.json" }}
      - run: yarn test:ci
      - run: yarn add codecov && yarn codecov
  back-test-e2e:
    docker:
      - image: circleci/node:dubnium-browsers
      - image: bitnami/mongodb:latest
        environment:
          MONGODB_USERNAME: onionBoilerplate
          MONGODB_PASSWORD: someNotSecurePassword
          MONGODB_DATABASE: erp
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: $CACHE_VERSION-dependencies-{{ checksum "package.json" }}
      - run: yarn test:e2e

  docker-build-and-push:
    working_directory: /dockerapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip=9.0.0-r1
            pip install docker-compose==1.15.0
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/erp-back:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_HUB_USER_ID/erp-back:latest
            docker push $DOCKER_HUB_USER_ID/erp-back:$CIRCLE_BUILD_NUM
            docker push $DOCKER_HUB_USER_ID/erp-back:latest


workflows:
  version: 2
  build-test-and-lint:
    jobs:
      - build
      - back-test-unit:
          requires:
            - build
      - back-test-e2e:
          requires:
            - build
      - lint:
          requires:
            - build
      - docker-build-and-push:
          requires:
            - build
            - lint
            - back-test-e2e
